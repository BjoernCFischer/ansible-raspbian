---

- name: upload authorized keys for user {{ ansible_ssh_user }}
  authorized_key:
    user: "{{ ansible_ssh_user }}"
    key: "{{ item }}"
    state: present
  with_items: "{{ ssh_public_keys }}"

- name: disable ssh remote root login
  lineinfile:
    dest: "{{ ssh_sshd_config }}"
    regexp: "^#?PermitRootLogin"
    line: "PermitRootLogin no"
    state: present
  notify:
    - restart sshd

- name: enable ssh strict mode
  lineinfile:
    dest: "{{ ssh_sshd_config }}"
    regexp: "^#?StrictModes"
    line: "StrictModes yes"
    state: present
  notify:
    - restart sshd

- name: disable X11 forwarding
  lineinfile:
    dest: "{{ ssh_sshd_config }}"
    regexp: "^#?X11Forwarding"
    line: "X11Forwarding no"
    state: present
  notify:
    - restart sshd

- name: disable ssh password login
  lineinfile:
    dest: "{{ ssh_sshd_config }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - regexp: "^#?PasswordAuthentication"
      line: "PasswordAuthentication no"
    - regexp: "^#?ChallengeResponseAuthentication"
      line: "ChallengeResponseAuthentication no"
    - regexp: "^#?UsePAM"
      line: "UsePAM no"
    - regexp: "^#?PermitEmptyPasswords"
      line: "PermitEmptyPasswords no"
  notify:
    - restart sshd

- name: Check if AllowUsers directive is present at all
  lineinfile:
    dest: "{{ ssh_sshd_config }}"
    regexp: "^#?AllowUsers.*$"
    state: absent
  check_mode: true
  changed_when: false
  register: allowusers_line

- name: Make sure AllowUsers directive is present at all
  lineinfile:
    dest: "{{ ssh_sshd_config }}"
    line: 'AllowUsers'
  when: not allowusers_line.found
  notify:
    - restart sshd

- name: Check if {{ ansible_ssh_user }} is already contained in AllowUsers
  lineinfile:
    dest: "{{ ssh_sshd_config }}"
    regexp: "^#?AllowUsers .*{{ ansible_ssh_user }}.*$"
    state: absent
  check_mode: true
  changed_when: false
  register: permission_already

- name: Add {{ ansible_ssh_user }} to ssh allowed users to if not already
  lineinfile:
    dest: "{{ ssh_sshd_config }}"
    backrefs: true
    regexp: "^#?AllowUsers(.*)$"
    line: 'AllowUsers\1 {{ ansible_ssh_user }}'
  when: not permission_already.found
  notify:
    - restart sshd

- name: add ssh banner info
  lineinfile:
    dest: "{{ ssh_sshd_config }}"
    regexp: "^#?Banner"
    line: "Banner /etc/issue.net"
    state: present
  notify:
    - restart sshd

- name: update ssh banner
  copy:
    content: "{{ ssh_banner }}"
    dest: /etc/issue.net
  when: ssh_banner != None
  notify:
    - restart sshd
